## Adding to Devious

Executing this command for a given file allows it be to retrieved later.

This command copies files to the initialized storage directory, along with the permissions and primary group specified during initialization. If no group was specified, it inherits the group of the file it was copied from. If no permissions were specified, the copied file's default file permissions are read-write for the user and primary group, and read for global.

For each added file, This command generates a metadata file `<filename>.dvsmeta` for future versioning.

#### R Command

In R, this command may look like:

```{r}
dvs_add(files = c("path/to/file1", "path/to/file2"), message = "assembled data sets for project X")
```

-   `files` is a vector of file glob characters representing the set of files to be copied to the initialized storage directory

-   `message` is a character that gives a contextualizing message for future file retrievers

-   the output is a data frame whose rows are the added files and the columns for a given file are its:

    -   `path`: relative to the git directory
    -   `hash`: from blake3 (if successfully created)
    -   `outcome` of adding (`Success`, `Error`, or `Already Present`)
    -   `error` summary if the `outcome` was `Error`
    -   `size` in bytes

(TODO: add picture)

#### Shell Command

In Shell, this command may look like: (TODO: implement) (TODO: check if quotes are needed for message)

```         
dvs init path/to/file1 path/to/file2 --message="assembled data sets for project X"
```

-   the first argument is a space-separated list of file globs representing the set of files to be copied to the initialized storage_directory

-   `message` is a contextualizing message for collaborators.

#### Implementation Details:

-   `.gitignore` files, `.dvsmeta` files, and repeated files are skipped in the first argument to prevent unexpected behavior, especially from file globs that use wildcard `*`.

#### Errors

If the project directory is not a git repository, or the configuration file cannot be found, the function returns an error. 

If any errors pertaining to specific files occur, a contextualizing message with the error is printed, but the error isn't returned.

In R's interface, the first occuring error is given in the `error` column of the returned data frame.

#### List of Potential Errors

-   file not in git repository
-   file not found
-   path is a directory
-   hash not found
-   size not found
-   owner not found
-   owner name not found
-   group not found
-   storage directory not found
-   permissions not valid
-   metadata not saved
-   .gitignore entry not added
